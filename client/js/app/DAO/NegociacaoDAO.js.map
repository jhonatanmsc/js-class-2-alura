{"version":3,"sources":["../../app-es6/DAO/NegociacaoDAO.js"],"names":["Negociacao","NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacaoList","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEIC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,YAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACI,MAAKN,MADT,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,6BAHD;;AAKAE,oCAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAJD;AAKH,yBAjBM,CAAP;AAkBH;;;kDAEa;AAAA;;AAEV,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACK,OAAKN,MADV,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,iBAAiB,EAArB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;;AAEpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,mDAAeK,IAAf,CACI,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CADJ;;AAGAP,0CAAMQ,QAAN;AAEH,iCARD,MAQO;;AAEHxB,4CAAQe,cAAR;AACH;AACJ,6BAfD;;AAiBAF,mCAAON,OAAP,GAAiB,aAAK;;AAElBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,sCAAP;AACH,6BAJD;AAKH,yBA/BM,CAAP;AAgCH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACI,OAAKN,MADT,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,uBAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB;AAAA,uCAAKN,OAAO,sCAAP,CAAL;AAAA,6BAAlB;AACH,yBATM,CAAP;AAUH","file":"NegociacaoDAO.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoDAO {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacao';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction((this._store), 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = e => {\n\n                resolve();\n            };\n\n            request.onerror = e => {\n\n                console.log(e.target.error);\n                reject(\"Não foi possivel adicionar a negociação\");\n            };\n        });\n    }\n\n    listarTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection\n                .transaction((this._store), 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacaoList = [];\n\n            cursor.onsuccess = e => {\n\n                let atual = e.target.result;\n                if (atual) {\n                    let dado = atual.value;\n\n                    negociacaoList.push(\n                        new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n\n                } else {\n\n                    resolve(negociacaoList)\n                }\n            }\n\n            cursor.onerror = e => {\n\n                console.log(e.target.error);\n                reject(\"Não foi possivel listar negociações.\");\n            }\n        });\n    }\n\n    apagaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction((this._store), 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve(\"Negociações removidas\");\n            request.onerror = e => reject(\"Não foi possivel remover negociações\")\n        });\n    }\n}"]}